// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using teleScope.Models;

#nullable disable

namespace teleScope.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250130114124_changeDurationType")]
    partial class changeDurationType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("teleScope.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("AdminId")
                        .HasName("PK__admins__43AA4141E46A716E");

                    b.HasIndex("UserId");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("teleScope.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("due_date");

                    b.Property<bool?>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_paid");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("issue_date");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_amount");

                    b.HasKey("BillId")
                        .HasName("PK__bills__D706DDB3B5F5211F");

                    b.HasIndex("CustomerId");

                    b.ToTable("bills");
                });

            modelBuilder.Entity("teleScope.Models.Call", b =>
                {
                    b.Property<int>("CallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("call_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CallId"));

                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime")
                        .HasColumnName("call_date");

                    b.Property<string>("CallType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("local")
                        .HasColumnName("call_type");

                    b.Property<string>("DestinationNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("destination_number");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("duration");

                    b.Property<bool?>("IsIncoming")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_incoming");

                    b.Property<int>("PhoneId")
                        .HasColumnType("int")
                        .HasColumnName("phone_id");

                    b.HasKey("CallId")
                        .HasName("PK__calls__427DCE683B27BFD2");

                    b.HasIndex("PhoneId");

                    b.ToTable("calls");
                });

            modelBuilder.Entity("teleScope.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CustomerId")
                        .HasName("PK__customer__CD65CB852FB77121");

                    b.HasIndex("UserId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("teleScope.Models.PhoneNumber", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("phone_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("PhoneType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phone_type");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("program_id");

                    b.HasKey("PhoneId")
                        .HasName("PK__phone_nu__E6BD6DD7BBE1D578");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProgramId");

                    b.HasIndex(new[] { "Phone" }, "UQ__phone_nu__B43B145FA7EB9547")
                        .IsUnique();

                    b.ToTable("phone_numbers");
                });

            modelBuilder.Entity("teleScope.Models.Programme", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("program_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<decimal>("FiveDigitFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("five_digit_fee");

                    b.Property<decimal>("FixedCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fixed_cost");

                    b.Property<decimal>("LandlineFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("landline_fee");

                    b.Property<int>("LandlineMinutes")
                        .HasColumnType("int")
                        .HasColumnName("landline_minutes");

                    b.Property<decimal>("MobileFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("mobile_fee");

                    b.Property<int>("MobileMinutes")
                        .HasColumnType("int")
                        .HasColumnName("mobile_minutes");

                    b.Property<string>("ProgrName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("progr_name");

                    b.HasKey("ProgramId")
                        .HasName("PK__programm__3A7890AC8387909C");

                    b.HasIndex(new[] { "ProgrName" }, "UQ__programm__46AE24AE7D6C7111")
                        .IsUnique()
                        .HasFilter("[progr_name] IS NOT NULL");

                    b.ToTable("programmes");
                });

            modelBuilder.Entity("teleScope.Models.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seller_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellerId"));

                    b.Property<int?>("TaxNumber")
                        .HasColumnType("int")
                        .HasColumnName("tax_number");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SellerId")
                        .HasName("PK__sellers__780A0A97C0100223");

                    b.HasIndex("UserId");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("teleScope.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("UserRole")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("user_role");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__users__B9BE370FF26EDAB7");

                    b.HasIndex(new[] { "Username" }, "UQ__users__F3DBC5720946FDFB")
                        .IsUnique()
                        .HasFilter("[username] IS NOT NULL");

                    b.ToTable("users");
                });

            modelBuilder.Entity("teleScope.Models.Admin", b =>
                {
                    b.HasOne("teleScope.Models.User", "User")
                        .WithMany("Admins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__admins__user_id__7A672E12");

                    b.Navigation("User");
                });

            modelBuilder.Entity("teleScope.Models.Bill", b =>
                {
                    b.HasOne("teleScope.Models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__bills__customer___0D7A0286");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("teleScope.Models.Call", b =>
                {
                    b.HasOne("teleScope.Models.PhoneNumber", "Phone")
                        .WithMany("Calls")
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__calls__phone_id__09A971A2");

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("teleScope.Models.Customer", b =>
                {
                    b.HasOne("teleScope.Models.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__customers__user___778AC167");

                    b.Navigation("User");
                });

            modelBuilder.Entity("teleScope.Models.PhoneNumber", b =>
                {
                    b.HasOne("teleScope.Models.Customer", "Customer")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__phone_num__custo__02FC7413");

                    b.HasOne("teleScope.Models.Programme", "Program")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__phone_num__progr__03F0984C");

                    b.Navigation("Customer");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("teleScope.Models.Seller", b =>
                {
                    b.HasOne("teleScope.Models.User", "User")
                        .WithMany("Sellers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__sellers__user_id__74AE54BC");

                    b.Navigation("User");
                });

            modelBuilder.Entity("teleScope.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("teleScope.Models.PhoneNumber", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("teleScope.Models.Programme", b =>
                {
                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("teleScope.Models.User", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Customers");

                    b.Navigation("Sellers");
                });
#pragma warning restore 612, 618
        }
    }
}
