@using X.PagedList.Mvc.Core
@using X.PagedList.EntityFramework
@using X.PagedList
@model X.PagedList.IPagedList<teleScope.Models.BillsUserModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Bills</h1>

<p class="float-end">
    <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-square-fill" style="color: white"></i>Create Bill</a>
</p>

<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            <th>
                Username
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Issue Date
            </th>
            <th>
                Due Date
            </th>
            <th>
                Total Amount
            </th>
            <th>
                Status
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                 @Html.DisplayFor(modelItem => item.user.Username)
            </td>
            <td>
                 @Html.DisplayFor(modelItem => item.phoneNumber.Phone)
            </td>
            <td>
                    @item.bill.IssueDate.ToString("dd-MM-yyyy")
            </td>
            <td>
                    @item.bill.DueDate.ToString("dd-MM-yyyy")
            </td>
            <td>
                    @item.bill.TotalAmount&#8364
            </td>
            <td>
                <span class="badge @(item.bill.IsPaid.HasValue ? (item.bill.IsPaid.Value ? "bg-success" : "bg-danger") : "bg-secondary")">
                     @(item.bill.IsPaid.HasValue ? (item.bill.IsPaid.Value ? "Paid" : "Not Paid") : "Unknown")
                </span>
            </td>
           
            <td>
                    <p class="d-inline-flex gap-1">
                        <a class="btn btn-info" asp-action="Details" asp-route-id="@item.bill.BillId">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                                <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M1.173 8a13 13 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5s3.879 1.168 5.168 2.457A13 13 0 0 1 14.828 8q-.086.13-.195.288c-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5s-3.879-1.168-5.168-2.457A13 13 0 0 1 1.172 8z" />
                                <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0" />
                            </svg>
                        </a>
                       
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.bill.BillId">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                            </svg>
                        </a>

                    </p>
 
            </td>
        </tr>
}
    </tbody>
</table>
<nav class="pageList">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions()
{
    ActiveLiElementClass = "active",
    PageClasses = new[] { "page-link" },
    LiElementClasses = new[] { "page-item" },
    UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
})
</nav>